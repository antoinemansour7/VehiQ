name: Continuous Integration

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:12-3.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: matterbranch
          POSTGRES_DB: branch
        ports:
          - 5432:5432
        # Set health checks to wait until postgres is ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Install system Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdal-dev gdal-bin

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install python-dotenv

      - name: Apply Migrations
        env:
          DATABASE_URL: postgres://youruser:yourpassword@localhost:5432/yourdbname
        run: python manage.py migrate

      - name: Run Tests
        run: python manage.py test



name: Set up Node.js

    uses: actions/setup-node@v2
    with:
      node-version: '20.11.1'


name: Run Vue.js unit tests

on: [push, pull_request]

  run: npm run test:unit
